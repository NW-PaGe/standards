on:
  workflow_dispatch:
  push:
    branches:
      - main
    branches-ignore:
      - gh-pages  # Exclude the gh-pages branch from triggering the workflow

name: Render and Publish

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'github-actions[bot]' && github.actor != 'nwpage-let-me-in' && (github.event_name != 'push' || github.event.pusher.name != 'github-actions[bot]') }}

    env:
      RENV_PATHS_ROOT: ~/.cache/R/renv
      
    steps:
      # Step 1: Create GitHub App Token
      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.YOUR_GITHUB_APP_ID }}
          private-key: ${{ secrets.YOUR_GITHUB_APP_PRIVATE_KEY }}
  
      # Step 2: Checkout repository code using GitHub App Token
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.0' # The R version to download (if necessary) and use.
        
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: '1.5.22'
        
      - name: Prep CURL install
        run: sudo apt-get update

      - name: Install CURL Headers
        run: sudo apt-get install libcurl4-openssl-dev

      # - name: Setup Renv
      #   uses: r-lib/actions/setup-renv@v2
  
      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      
      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
          renv::install('reticulate')
      
      # - name: Install extra R packages
      #   run: |
      #     install.packages(c("knitr", "rmarkdown", "quarto", "stringr"))
      #   shell: Rscript {0}

      # - name: Render PDF
      #   run: |
      #       quarto install tinytex
      #       quarto render _make_pdf.qmd
      
      - name: Render PDF
        run: |
            quarto render _make_pdf.qmd
            # quarto::quarto_render("_make_pdf.qmd")
        # shell: Rscript {0}
       

      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2.0.2
        with:
          target: gh-pages
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions

      # Commit all changed files back to the repository
      # - uses: EndBug/add-and-commit@v9
      #   with:
      #       author_name: 'GitHub Actions'
      #       author_email: 'github-actions[bot]@users.noreply.github.com'
      #       message: 'Deploy updates to GitHub Pages'
      #       add: '.'
      #       push: true
      #       # default_author: github_actions
      #       # Optionally, add a condition here to check if the commit
      #       # is really needed, or conditionally disable it.
      #       skip_if_empty: true  # Skip commit if nothing changed
      # Commit all changed files back to the repository using Git commands
      - name: Commit and push changes to main
        run: |
          # Configure Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are any changes
          git add .
          
          # Commit changes if there are any
          if [[ $(git diff --cached --name-only) ]]; then
            git commit -m "Deploy updates to GitHub Pages"
            git push origin main
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required to push to the repository

